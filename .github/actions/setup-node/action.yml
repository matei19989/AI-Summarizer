name: 'Setup Node.js Environment'
description: 'Sets up Node.js with caching and common configurations'
inputs:
  node-version:
    description: 'Node.js version to install'
    required: false
    default: '20'
  working-directory:
    description: 'Working directory for Node.js operations'
    required: false
    default: './ai-summarizer-frontend'
outputs:
  cache-hit:
    description: 'Whether npm cache was hit'
    value: ${{ steps.cache-npm.outputs.cache-hit }}
runs:
  using: 'composite'
  steps:
    - name: Setup Node.js ${{ inputs.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'npm'
        cache-dependency-path: ${{ inputs.working-directory }}/package-lock.json

    - name: Cache node_modules
      id: cache-npm
      uses: actions/cache@v4
      with:
        path: ${{ inputs.working-directory }}/node_modules
        key: ${{ runner.os }}-node-${{ inputs.node-version }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ inputs.node-version }}-

    - name: Install dependencies
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        if [ ! -d "node_modules" ]; then
          npm ci --prefer-offline --no-audit
        fi
        echo "Node.js $(node --version) and npm $(npm --version) ready"