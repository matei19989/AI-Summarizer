# ===================================================================
# Base Docker Compose - Container Strategy
# Consistent port 80 throughout, optimized for container deployment
# ===================================================================

x-backend-base: &backend-base
  build:
    context: ./AISummarizerAPI
    dockerfile: Dockerfile
    target: runtime
  environment:
    - ASPNETCORE_URLS=http://+:80
    - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Production}
  networks:
    - ai-summarizer-network
  healthcheck:
    test: ["CMD-SHELL", "curl -f http://localhost:80/api/summarization/health || exit 1"]
    interval: 30s
    timeout: 10s
    retries: 3
    start_period: 40s
  restart: unless-stopped

x-frontend-base: &frontend-base
  build:
    context: ./ai-summarizer-frontend
    dockerfile: Dockerfile
    target: runtime
  environment:
    - NGINX_ENV=${NGINX_ENV:-production}
  networks:
    - ai-summarizer-network
  depends_on:
    backend:
      condition: service_healthy
  healthcheck:
    test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:80/health || exit 1"]
    interval: 30s
    timeout: 10s
    retries: 3
    start_period: 10s
  restart: unless-stopped

services:
  backend:
    <<: *backend-base
    container_name: ai-summarizer-backend
    expose:
      - "80"

  frontend:
    <<: *frontend-base
    container_name: ai-summarizer-frontend
    ports:
      - "80:80"

networks:
  ai-summarizer-network:
    driver: bridge
    name: ai-summarizer-net